# SwiftLint Configuration for osmo
# Enforces iOS 17+ patterns with @Observable and SwiftUI

# Paths to include
included:
  - osmo

# Paths to exclude
excluded:
  - osmo/Assets.xcassets
  - osmo.xcodeproj
  - osmoTests
  - osmoUITests
  - Carthage
  - Pods
  - .build
  - build
  - DerivedData

# Rules
opt_in_rules:
  - array_init
  - closure_end_indentation
  - closure_spacing
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - empty_collection_literal
  - empty_count
  - empty_string
  - explicit_init
  - first_where
  - force_unwrapping
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_random
  - literal_expression_end_indentation
  - multiline_parameters
  - operator_usage_whitespace
  - overridden_super_call
  - prefer_self_type_over_type_of_self
  - redundant_nil_coalescing
  - sorted_first_last
  - toggle_bool
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - yoda_condition

disabled_rules:
  - trailing_whitespace
  - todo  # We use TODOs for planning

# Rule configurations
line_length:
  warning: 120
  error: 200
  ignores_comments: true

type_body_length:
  warning: 300
  error: 500

file_length:
  warning: 500
  error: 1000

function_body_length:
  warning: 50
  error: 100

identifier_name:
  min_length: 2
  max_length: 50
  
type_name:
  min_length: 3
  max_length: 50

# Custom rules to enforce iOS 17+ patterns
custom_rules:
  
  # === UIKit Prevention ===
  no_uikit_import:
    name: "No UIKit Import"
    regex: '^import\s+UIKit'
    message: "UIKit imports are not allowed. Use SwiftUI instead."
    severity: error
    excluded:
      - "*/CameraPreviewView.swift"
      - "*/CameraVisionService.swift"

  no_uicolor:
    name: "No UIColor"
    regex: 'UIColor\.'
    message: "Use Color for SwiftUI or SKColor for SpriteKit"
    severity: error
    excluded:
      - "*/CameraPreviewView.swift"

  no_uiscreen:
    name: "No UIScreen"
    regex: 'UIScreen\.'
    message: "Use GeometryReader instead of UIScreen.main"
    severity: error

  # === Old Observation Pattern Prevention ===
  no_observable_object:
    name: "No ObservableObject"
    regex: ':\s*ObservableObject'
    message: "Use @Observable instead of ObservableObject (iOS 17+)"
    severity: error

  no_published:
    name: "No @Published"
    regex: '@Published'
    message: "Use @Observable class instead - all properties are auto-observable"
    severity: error

  no_state_object:
    name: "No @StateObject"
    regex: '@StateObject'
    message: "Use @State with @Observable classes"
    severity: error

  no_observed_object:
    name: "No @ObservedObject"  
    regex: '@ObservedObject'
    message: "Use @State or pass @Observable classes directly"
    severity: error

  no_environment_object:
    name: "No @EnvironmentObject"
    regex: '@EnvironmentObject'
    message: "Use @Environment with @Observable classes"
    severity: error

  # === Combine Pattern Prevention ===
  no_cancellables_in_views:
    name: "No Cancellables in Views"
    regex: 'struct\s+\w+\s*:\s*View[\s\S]{0,500}cancellables'
    message: "SwiftUI views don't need Combine with @Observable"
    severity: error

  no_dollar_sign_properties:
    name: "No $ Publishers"
    regex: 'viewModel\.\$\w+'
    message: "@Observable doesn't create publishers - use direct property access"
    severity: error

  no_sink_in_scenes:
    name: "No Combine sink in Scenes"
    regex: '\.sink\s*\{'
    message: "Use delegates instead of Combine in SKScene"
    severity: error
    excluded:
      - "*/Services/*"

  # === Navigation Pattern Enforcement ===
  no_navigation_view:
    name: "No NavigationView"
    regex: 'NavigationView\s*\{'
    message: "Use NavigationStack (iOS 16+)"
    severity: error

  # === Service Access Patterns ===
  warn_direct_service:
    name: "Direct Service Access Warning"
    regex: 'audioService\.|storageService\.'
    message: "Consider injecting services via initializer or environment"
    severity: warning
    excluded:
      - "*/ServiceContainer.swift"
      - "*/*Service.swift"
      - "*/ServiceProtocols.swift"

  # === Code Quality ===
  no_print_statements:
    name: "No Print Statements"
    regex: 'print\('
    message: "Use Logger instead of print"
    severity: warning
    excluded:
      - "*/TestUtilities/*"